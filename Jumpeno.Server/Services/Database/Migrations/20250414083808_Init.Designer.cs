// <auto-generated />
using System;
using Jumpeno.Server.Services;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Jumpeno.Server.Migrations
{
    [DbContext(typeof(DB))]
    [Migration("20250414083808_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Jumpeno.Server.Models.ActivationEntity", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("VARCHAR(255)");

                    b.HasKey("ID");

                    b.ToTable("Activation");
                });

            modelBuilder.Entity("Jumpeno.Server.Models.PasswordEntity", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("VARCHAR(255)");

                    b.Property<byte[]>("Hash")
                        .IsRequired()
                        .HasColumnType("BINARY(32)");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<byte[]>("Salt")
                        .IsRequired()
                        .HasColumnType("BINARY(16)");

                    b.HasKey("ID");

                    b.ToTable("Password");
                });

            modelBuilder.Entity("Jumpeno.Server.Models.RefreshEntity", b =>
                {
                    b.Property<string>("Token")
                        .HasColumnType("VARCHAR(512)");

                    b.Property<DateTime>("Expires")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ID")
                        .HasColumnType("VARCHAR(255)");

                    b.Property<string>("Origin")
                        .HasColumnType("VARCHAR(512)");

                    b.HasKey("Token");

                    b.HasIndex("Expires");

                    b.HasIndex("ID");

                    b.HasIndex("Origin");

                    b.ToTable("Refresh");
                });

            modelBuilder.Entity("Jumpeno.Server.Models.UserEntity", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("VARCHAR(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("VARCHAR(255)");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(13)");

                    b.Property<int>("Skin")
                        .HasColumnType("INT(1)");

                    b.HasKey("ID");

                    b.HasIndex("CreatedAt");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("User");
                });

            modelBuilder.Entity("Jumpeno.Server.Models.ActivationEntity", b =>
                {
                    b.HasOne("Jumpeno.Server.Models.UserEntity", "User")
                        .WithOne("Activation")
                        .HasForeignKey("Jumpeno.Server.Models.ActivationEntity", "ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Jumpeno.Server.Models.PasswordEntity", b =>
                {
                    b.HasOne("Jumpeno.Server.Models.UserEntity", "User")
                        .WithOne("Password")
                        .HasForeignKey("Jumpeno.Server.Models.PasswordEntity", "ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Jumpeno.Server.Models.RefreshEntity", b =>
                {
                    b.HasOne("Jumpeno.Server.Models.UserEntity", "User")
                        .WithMany("Refresh")
                        .HasForeignKey("ID");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Jumpeno.Server.Models.UserEntity", b =>
                {
                    b.Navigation("Activation");

                    b.Navigation("Password");

                    b.Navigation("Refresh");
                });
#pragma warning restore 612, 618
        }
    }
}
