@namespace Jumpeno.Client.Components

@{ #pragma warning disable CS8600 }
@{ #pragma warning disable CS8602 }

@inherits Component

<div class="@GameScreenClass()" style="@CSSVariables()">
    <div class="canvas-box">
        <BECanvas Width="@Dimension.CanvasWidth" Height="@Dimension.CanvasHeight" @ref="GameCanvasRef" />
    </div>

    <div class="game-info">
        <div class="keyboard-display-box">
            <GameButton Class="keyboard-display-button" Action="new(VM.ToggleControls)">
                <Image URL="@IMAGE.ICON_KEYBOARD" NotDraggable Transparent NoTransition Preloaded Class="keyboard-display-image" />
                <span class="keyboard-display-text">@(VM.ControlsDisplayed ? I18N.T("Hide") : I18N.T("Show"))</span>
            </GameButton>
        </div>
        <p class="trademark project-name">@(AppSettings.Name)&trade;</p>
        <p class="game-time" @onclick="Pause">@Format.Ms_To_MMSS(VM.Game.Time)</p>
        <p class="trademark faculty-name">&copy; FRI UNIZA</p>
        <div class="game-connected">
            <p class="connect-text">@I18N.T("Screen connected")</p>
            <AntIcon Type="wifi" Theme="outline" Class="connect-icon" />
        </div>
        <p class="game-ping">@($"Ping"):&nbsp;&nbsp;<strong>@Format.DoubleWhole(VM.Game.Ping)</strong></p>
    </div>

    <div class="@GameControlsClass()">
        @code {
            private RenderFragment RenderControl(GAME_CONTROLS control, RenderFragment icon) =>
                @<button
                    class="@ControlClass(control)"
                    type="@BUTTON_TYPE.BUTTON.StringLower()"
                    @ontouchstart="TouchKeyEvent(control)" @ontouchend="ReleaseKeyEvent(control)"
                    @onmousedown="MouseTouchKeyEvent(control)"
                    @ontouchstart:preventDefault @ontouchend:preventDefault
                    @ontouchstart:stopPropagation @ontouchend:stopPropagation
                    tabindex="-1"
                >
                    @icon
                </button>
            ;
        }
        <div class="arrows">
            @RenderControl(GAME_CONTROLS.LEFT, @<AntIcon Type="left" Theme="outline" Class="control-icon" />)
            @RenderControl(GAME_CONTROLS.RIGHT, @<AntIcon Type="right" Theme="outline" Class="control-icon" />)
        </div>
        <div class="abilities">
            @RenderControl(GAME_CONTROLS.SPACE, @<AntIcon Type="to-top" Theme="outline" Class="control-icon" />)
        </div>
    </div>

    <InfoBox Class="flip-device" Type="rotate-left" Theme="outline">@I18N.T("Rotate screen")</InfoBox>
    <InfoBox Class="small-device" Type="fullscreen" Theme="outline">@I18N.T("Screen too small")</InfoBox>
</div>
