@namespace Jumpeno.Client.Components

@inherits BasicComponent

<div class="create-box">
    <AuthView Roles="[ROLE.USER]">
        <Box Class="create-form">
            <div class="create-form-header">
                <Heading1 Size="TEXT_SIZE.L" Class="create-heading">@I18N.T("Create game")</Heading1>
                <div class="create-form-header-options">
                    <WebLink
                        Href="@(I18N.Link<GamePage>())" HrefPrevent
                        OnClick="GamePage.NavigateToConnect"
                        Class="connect-link cancel"
                    >
                        <AntIcon Type="double-left" Theme="outline" Class="connect-icon" />
                        &nbsp;@I18N.T("Cancel")&nbsp;
                    </WebLink>
                    <Button Size="BUTTON_SIZE.S" OnClick="Create" Class="create-game-button">
                        <Text>@I18N.T("Create")</Text>
                        <IconAfter><AntIcon Type="plus-circle" Theme="Outline"/></IconAfter>
                    </Button>
                </div>
            </div>
            <div class="game-info">
                <AntIcon Type="setting" Theme="Outline" Class="settings-icon" />
                <Image URL="@IMAGE.JUMPER_YELLOW" Transparent NoTransition Class="logo-image" />
                <FormLabel Label="@I18N.T("Game name")" Size="FORM_SIZE.L" Align="FORM_ALIGN.CENTER" Class="game-name-label">
                    <InputField ViewModel="VMInputName" Name="name" Label="@I18N.T("Game name")" Size="FORM_SIZE.M" Align="FORM_ALIGN.CENTER" AllowClear Class="game-name" />
                </FormLabel>
                <div class="custom-code">
                    <CheckBoxField ViewModel="VMCheckBoxCode" Label="@I18N.T("Custom code")" Size="FORM_SIZE.S" Align="FORM_ALIGN.RIGHT" ActiveDescription AutoSize Class="custom-code" >
                        <Description>@I18N.T("Custom code")</Description>
                    </CheckBoxField>
                    <InputField ViewModel="VMInputCode" Name="code" Label="@I18N.T("Custom code")" Size="FORM_SIZE.S" Align="FORM_ALIGN.CENTER" Disabled="VMInputCodeDisabled" Class="game-code" />
                </div>
            </div>
            <div class="info-area">
                <p class="map-title">@I18N.T("Map")</p>
            </div>
            <div class="map-info">
                @* <div class="map-shadow" /> *@
                <div class="map-fields">
                    <SelectComponent
                        ViewModel="VMSelectMap"
                        Disabled="VMSelectMapDisabled"
                        Label="@I18N.T("Select map")"
                        Align="FORM_ALIGN.LEFT"
                        OptionAlign="SELECT_OPTION_ALIGN.CENTER"
                        Size="FORM_SIZE.S"
                        Class="map-select"
                        ModalClass="create-box-map-select-modal"
                        Style="width: 310px; margin-right: 36px;"
                    />
                    <AntIcon Type="caret-right" Theme="Outline" Class="create-box-map-icon" />
                    <div class="map-row">
                        <FormLabel Label="@I18N.T("TEXT_ANONYMOUS_PLAYERS")" Size="FORM_SIZE.L" Align="FORM_ALIGN.CENTER" Class="anonym-players">
                            <SwitchComponent
                                ViewModel="VMSwitchAnonyms"
                                Label="@I18N.T("TEXT_ANONYMOUS_PLAYERS")"
                                Size="FORM_SIZE.M"
                                Class="anonym-players-switch"
                                Position="SWITCH_POSITION.END"
                                Align="FORM_ALIGN.CENTER"
                                ActiveDescription
                                AutoSize
                            >
                                <Description>
                                    <AnonymSVG Class="anonym-players-svg" />
                                </Description>
                            </SwitchComponent>
                        </FormLabel>
                        <div class="gameplay-options">
                            <AntIcon Type="clock-circle" Theme="Outline" Class="create-box-round-icon" />
                            <SelectComponent
                                ViewModel="VMSelectRounds"
                                Label="@I18N.T("Number of rounds")"
                                Align="FORM_ALIGN.LEFT"
                                OptionAlign="SELECT_OPTION_ALIGN.CENTER"
                                Size="FORM_SIZE.S"
                                Class="rounds-select"
                                ModalClass="create-box-rounds-select-modal"
                            />
                            <AntIcon Type="team" Theme="Outline" Class="create-box-capacity-icon" />
                            <SelectComponent
                                ViewModel="VMSelectCapacity"
                                Label="@I18N.T("Capacity")"
                                Align="FORM_ALIGN.LEFT"
                                OptionAlign="SELECT_OPTION_ALIGN.CENTER"
                                Size="FORM_SIZE.S"
                                Class="capacity-select"
                                ModalClass="create-box-capacity-select-modal"
                            />
                        </div>
                    </div>
                </div>
                <div class="map-canvas-area">
                    <LoadArea @ref="VMSelectMapLoadArea" InitLoading Class="@($"load-area-canvas")">
                        <div class="map-canvas @SURFACE.SECONDARY.CSSClass()">
                        </div>
                    </LoadArea>
                </div>
            </div>

            <FormLabel Label="@I18N.T("Display mode")" Size="FORM_SIZE.L" Align="FORM_ALIGN.CENTER" Class="display-mode">
                <RadioButton ViewModel="VMRadioDisplayMode" Label="@I18N.T("Display mode")" AutoSize>
                    @if (true) {
                        var option = VMRadioDisplayModeOptions[0];
                        <RadioButtonOption ViewModel="option" Label="@($"{I18N.T("Display mode")}: {option.Label}")" AutoSize>
                            <DisplayModeEachOwnSVG Class="option-each-own-svg" />
                            <p class="option-label">@option.Label</p>
                            <p class="option-description">@I18N.T("Each has their own")</p>
                        </RadioButtonOption>
                    }
                    @if (true) {
                        var option = VMRadioDisplayModeOptions[1];
                        <RadioButtonOption ViewModel="option" Label="@($"{I18N.T("Display mode")}: {option.Label}")" AutoSize>
                            <DisplayModeOneScreenSVG Class="option-one-screen-svg" />
                            <p class="option-label">@option.Label</p>
                            <p class="option-description">@I18N.T("Play on 1 screen")</p>
                        </RadioButtonOption>
                    }
                    @if (true) {
                        var option = VMRadioDisplayModeOptions[2];
                        <RadioButtonOption ViewModel="option" Label="@($"{I18N.T("Display mode")}: {option.Label}")" AutoSize>
                            <DisplayModePresentationSVG Class="option-presentation-svg" />
                            <p class="option-label">@option.Label</p>
                            <p class="option-description">@I18N.T("Host only presents")</p>
                        </RadioButtonOption>
                    }
                </RadioButton>
            </FormLabel>

            <FormLabel Label="@I18N.T("Game mode")" Size="FORM_SIZE.L" Align="FORM_ALIGN.CENTER" Class="game-mode">
                <RadioButton ViewModel="VMRadioGameMode" Label="@I18N.T("Game mode")" AutoSize>
                    @if (true) {
                        var option = VMRadioGameModeOptions[0];
                        <RadioButtonOption ViewModel="option" Label="@($"{I18N.T("Game mode")}: {option.Label}")" AutoSize>
                            <p class="option-label"><GameModeMayhemSVG Class="option-mayhem-svg" />@option.Label</p>
                            <p class="option-description">@I18N.T("Timed game with respawns")</p>
                        </RadioButtonOption>
                    }
                    @if (true) {
                        var option = VMRadioGameModeOptions[1];
                        <RadioButtonOption ViewModel="option" Label="@($"{I18N.T("Game mode")}: {option.Label}")" AutoSize>
                            <p class="option-label"><GameModeLastStandingSVG Class="option-last-standing-svg" />@option.Label</p>
                            <p class="option-description">@I18N.T("Until one player remains")</p>
                        </RadioButtonOption>
                    }
                </RadioButton>
            </FormLabel>
        </Box>
    </AuthView>
    <AuthViewBlock Roles="[ROLE.USER]">
        <div class="create-box-error-page">
            <Heading1 Size="TEXT_SIZE.XL" Class="error-page-heading">@I18N.T("Error 403")</Heading1>
            <Paragraph Size="TEXT_SIZE.L" Class="error-page-paragraph">@I18N.T("You are not authorized to create games.")</Paragraph>
            <WebLink
                Href="@(I18N.Link<GamePage>())" HrefPrevent
                OnClick="GamePage.NavigateToConnect"
                Class="connect-link"
            >
                <AntIcon Type="play-circle" Theme="outline" Class="connect-icon" />
                &nbsp;@I18N.T("Connect")&nbsp;
            </WebLink>
        </div>
    </AuthViewBlock>
</div>
