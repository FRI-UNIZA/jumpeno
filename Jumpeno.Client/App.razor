@namespace Jumpeno.Client

@code {
    // ViewModels -------------------------------------------------------------------------------------------------------------------------
    private CookieConsentModal CookieConsentModalRef = null!;
    
    public void Notify() => StateHasChanged();

    // Lifecycle --------------------------------------------------------------------------------------------------------------------------
    protected override void OnInitialized() => AuthPage.Init(this);

    protected override async Task OnAfterRenderAsync(bool firstRender) {
        try {
            if (!firstRender) { AuthPage.FinishStage(); return; }
            // Authorization:
            if (!await Auth.TryLogInAdmin()) await Auth.TryLogInToken();
            await AuthPage.NextStage();
            await AuthPage.ChangePath();
            await AuthPage.AddRedirect();
            // Cookie modal:
            var cookieModalOpen = await CookieStorage.InitModal();
            // Server loader:
            ServerPageLoader.Hide();
            await PageLoader.Hide(PAGE_LOADER_TASK.INITIAL);
            // Init actions:
            await Init.TryActivate();
            await Init.TryPasswordReset();
            // PageLoader:
            await PageLoader.WithActiveLoader(() => ActionHandler.SetFocus(PageLoader.ID));
            await PageLoader.AwaitAllLoaders();
            // Focus:
            if (cookieModalOpen) ActionHandler.SetFocus(CookieConsentModalRef.GetDialogID());
            else ActionHandler.SetFocus(WebDocument.ID);
        } catch {
            // Initialization error:
            ServerPageLoader.Stop();
            Notification.Error(I18N.T("Something went wrong."));
        }
    }
}

<ThemeProvider>
    <ImagePreloader />
    <CanvasPreRenderer />
    <AriaPageAlert />
    <PageLoader>
        <ModalProvider>
            <WebDocument>
                <DocTitle Value="@AppSettings.Name" />
                @if (AuthPage.IsRendering()) {
                    <Router AppAssembly="@typeof(App).Assembly">
                        <Found Context="routeData">
                            <RouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" />
                        </Found>
                        <NotFound>
                            <LayoutView Layout="@typeof(MainLayout)">
                                <Error404Page />
                            </LayoutView>
                        </NotFound>
                    </Router>
                }
            </WebDocument>
        </ModalProvider>
    </PageLoader>
    <AntDesign.AntContainer />
    <CookieConsentModal @ref="@CookieConsentModalRef" />
    <Notification />
</ThemeProvider>
