@namespace Jumpeno.Client

@code {
    // ViewModels -------------------------------------------------------------------------------------------------------------------------
    private CookieModal CookieModalRef = null!;
    
    public void Notify() => StateHasChanged();

    // Lifecycle --------------------------------------------------------------------------------------------------------------------------
    protected override void OnInitialized() => AuthPage.Init(this);

    protected override async Task OnAfterRenderAsync(bool firstRender) {
        try {
            if (!firstRender) { AuthPage.FinishStage(); return; }
            // Authorization:
            if (!await Auth.TryLogInAdmin()) await Auth.TryLogInToken();
            await AuthPage.NextStage();
            await AuthPage.ChangePath();
            await AuthPage.AddRedirect();
            // Cookie modal:
            var cookieModalOpen = await CookieStorage.InitModal();
            // Server loader:
            ServerPageLoader.Hide();
            await PageLoader.Hide(PAGE_LOADER_TASK.INITIAL);
            // Init actions:
            await Initialization();
            // PageLoader:
            await PageLoader.WithActiveLoader(() => ActionHandler.SetFocus(PageLoader.ID));
            await PageLoader.AwaitAllLoaders();
            // Focus:
            if (cookieModalOpen) ActionHandler.SetFocus(CookieModalRef.GetDialogID());
            else ActionHandler.SetFocus(WebDocument.ID);
        } catch {
            // Initialization error:
            ServerPageLoader.Stop();
            Notification.Error(I18N.T("Something went wrong."));
        }
    }

    // Init actions -----------------------------------------------------------------------------------------------------------------------
    public async Task Initialization() {
        await Init.TryActivate();
        await Init.TryPasswordReset();
    }
}

<ThemeProvider>
    <ImagePreloader />
    <CanvasPreRenderer />
    <AriaPageAlert />
    <PageLoader>
        <ModalProvider>
            <WebDocument>
                <DocTitle Value="@AppSettings.Name" />
                <AuthPage>
                    <AppLayout>
                        <Router AppAssembly="@typeof(App).Assembly">
                            <Found Context="routeData">
                                <RouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" />
                            </Found>
                            <NotFound>
                                <LayoutView Layout="@typeof(MainLayout)">
                                    <Error404Page />
                                </LayoutView>
                            </NotFound>
                        </Router>
                    </AppLayout>
                </AuthPage>
            </WebDocument>
        </ModalProvider>
    </PageLoader>
    <AntDesign.AntContainer />
    <CookieModal @ref="@CookieModalRef" />
    <Notification />
</ThemeProvider>
