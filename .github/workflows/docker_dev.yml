name: Dev Build&Deploy

on:
  push:
    branches: [ development ] # Trigger this on pushing to the 'development' branch
  workflow_dispatch: # Allows manual trigger from the GitHub Actions tab

jobs:
  # Job 1:
  build:
    runs-on: ubuntu-latest
    environment: development
    steps:
      # Step 1:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: 'development'
      # Step 2:
      - name: Inject secrets
        run: |
          # Modify appsettings.json
          jq '.Auth.Pepper = "${{ secrets.AUTH_PEPPER }}" |
              .Auth.JWT.AccessSecret = "${{ secrets.AUTH_JWT_ACCESS_SECRET }}" |
              .Auth.JWT.RefreshSecret = "${{ secrets.AUTH_JWT_REFRESH_SECRET }}" |
              .Auth.JWT.DataSecret = "${{ secrets.AUTH_JWT_DATA_SECRET }}" |
              .Email.Host = "${{ secrets.EMAIL_HOST }}" |
              .Email.Port = "${{ secrets.EMAIL_PORT }}" |
              .Email.Password = "${{ secrets.EMAIL_PASSWORD }}" |
              .Email.BackupKeys = "${{ secrets.EMAIL_BACKUP_KEYS }}" |
              .Email.AppPassword = "${{ secrets.EMAIL_APP_PASSWORD }}" |
              .Email.Mailcatcher = "false"' \
          Jumpeno.Server/appsettings.json > Jumpeno.Server/appsettings.tmp.json && \
          mv Jumpeno.Server/appsettings.tmp.json Jumpeno.Server/appsettings.json
      # Step 3:
      - name: Inject variables
        run: |
          # Modify appsettings.json
          jq '.Email = "${{ vars.EMAIL_ADDRESS }}" |
              .Links.Adminer = "${{ vars.DB_LINK }}" |
              .Links.Email = "${{ vars.EMAIL_LINK }}"' \
          Jumpeno.Shared/appsettings.json > Jumpeno.Shared/appsettings.tmp.json && \
          mv Jumpeno.Shared/appsettings.tmp.json Jumpeno.Shared/appsettings.json
      # Step 4:
      - name: Login to GitHub Container Registry (GHCR)
        env:
          GITHUB_USER: ${{ github.actor }}
          GITHUB_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
        run: docker login https://ghcr.io -u $GITHUB_USER -p $GITHUB_PASSWORD
      # Step 5:
      - name: Build images
        run: docker compose build
      # Step 6:
      - name: Tag images
        run: |
          docker tag jumpeno ghcr.io/fri-uniza/jumpeno/jumpeno:dev
      # Step 7:
      - name: Push images to GHCR
        run: |
          docker push ghcr.io/fri-uniza/jumpeno/jumpeno:dev
  # Job 2:
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      # Step 1:
      - uses: actions/checkout@v4
        with: 
          ref: 'development'
      # Step 2:
      - name: Push with curl
        uses: wei/curl@v1
        with:
          args: -X POST -k ${{ vars.PORTAINER_WEBHOOK_URL }}
