@page "/errors"
@using JumpenoWebassembly.Shared
@using JumpenoWebassembly.Shared.ErrorHandling

@inject ErrorService errorService;

@if (actualError != null)
{
    <button @onclick="() => {actualError = null;}">Back to errors</button>
    <h3>Detail od Error with id @actualError.Id</h3>
    <p>
        Type: @actualError.Type
    </p>
    <p>
        Date: @actualError.Date
    </p>
    <p>
        Message: @actualError.Message
    </p>
    <p>
        Stack trace: @actualError.StackTrace
    </p>
    <p>
        Notes: @actualError.Notes
    </p>
} else
{
    <h3>ErrorLog</h3>
    
    <section class="games">
            <div class="table-header">
                <table>
                    <tr>
                        <th>Type</th>
                        <th>Message</th>
                        <th>Date</th>
                        <th></th>
                    </tr>
                </table>
            </div>

            <div class="table-content">
                <table>
                    @foreach (var error in _errors)
                    {
                        <tr>
                            <td>@error.Type</td>
                            <td>@error.Message</td>
                            <td>@error.Date</td>
                            <td><button @onclick="() => ShowDetail(error)">Detail</button></td>
                        </tr>
                    }
                </table>
            </div>
        </section>
}


@code {
    private bool detail = false;
    private Error actualError = null;

    private List<Error> _errors = new();

    protected override async Task OnInitializedAsync()
    {
        actualError = null;
        _errors = await errorService.ReceiveErrors();
        StateHasChanged();
    }

    private void ShowDetail(Error error)
    {
        actualError = error;
        detail = true;
    }
}
